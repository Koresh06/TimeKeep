"""Initial tables

Revision ID: 4e2c0c8c22b6
Revises: 
Create Date: 2024-11-21 21:16:35.150744

"""
from typing import Sequence, Union

from alembic import op
import fastapi_users_db_sqlalchemy
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '4e2c0c8c22b6'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('departments',
    sa.Column('id', fastapi_users_db_sqlalchemy.generics.GUID(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.String(length=255), nullable=False),
    sa.Column('create_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('update_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk__departments')),
    sa.UniqueConstraint('name', name=op.f('uq__departments__name'))
    )
    op.create_table('users',
    sa.Column('department_id', fastapi_users_db_sqlalchemy.generics.GUID(), nullable=False),
    sa.Column('username', sa.String(length=255), nullable=False),
    sa.Column('full_name', sa.String(length=255), nullable=False),
    sa.Column('role', sa.Enum('USER', 'MODERATOR', name='role'), nullable=False),
    sa.Column('position', sa.String(length=255), nullable=False),
    sa.Column('create_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('update_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('id', fastapi_users_db_sqlalchemy.generics.GUID(), nullable=False),
    sa.Column('email', sa.String(length=320), nullable=False),
    sa.Column('hashed_password', sa.String(length=1024), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('is_superuser', sa.Boolean(), nullable=False),
    sa.Column('is_verified', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['department_id'], ['departments.id'], name=op.f('users_department_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk__users'))
    )
    op.create_index(op.f('ix__users_email'), 'users', ['email'], unique=True)
    op.create_table('day_offs',
    sa.Column('id', fastapi_users_db_sqlalchemy.generics.GUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('date', sa.DateTime(), nullable=False),
    sa.Column('reason', sa.String(length=500), nullable=False),
    sa.Column('is_approved', sa.Boolean(), nullable=False),
    sa.Column('create_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('update_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('day_offs_user_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk__day_offs'))
    )
    op.create_table('overtimes',
    sa.Column('id', fastapi_users_db_sqlalchemy.generics.GUID(), nullable=False),
    sa.Column('user_id', fastapi_users_db_sqlalchemy.generics.GUID(), nullable=False),
    sa.Column('date', sa.DateTime(), nullable=False),
    sa.Column('hours', sa.Integer(), nullable=False),
    sa.Column('description', sa.String(length=500), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('overtimes_user_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk__overtimes'))
    )
    op.create_table('overtime_day_off_links',
    sa.Column('id', fastapi_users_db_sqlalchemy.generics.GUID(), nullable=False),
    sa.Column('overtime_id', fastapi_users_db_sqlalchemy.generics.GUID(), nullable=False),
    sa.Column('day_off_id', fastapi_users_db_sqlalchemy.generics.GUID(), nullable=False),
    sa.ForeignKeyConstraint(['day_off_id'], ['day_offs.id'], name=op.f('overtime_day_off_links_day_off_id_fkey')),
    sa.ForeignKeyConstraint(['overtime_id'], ['overtimes.id'], name=op.f('overtime_day_off_links_overtime_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk__overtime_day_off_links'))
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('overtime_day_off_links')
    op.drop_table('overtimes')
    op.drop_table('day_offs')
    op.drop_index(op.f('ix__users_email'), table_name='users')
    op.drop_table('users')
    op.drop_table('departments')
    # ### end Alembic commands ###
